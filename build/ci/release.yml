# Copyright 2025 MongoDB Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

variables:
  - &go_linux_version
      go_root: "/opt/golang/go1.24"
      go_bin: "/opt/golang/go1.24/bin"
      go_base_path: ""
  - &go_env
      XDG_CONFIG_HOME: ${go_base_path}${workdir}
      GO111MODULE: "on"
      GOROOT: ${go_root}
      GOPATH: ${go_base_path}${workdir}
      ADD_PATH: "${go_bin}:${go_base_path}${workdir}/bin:${go_base_path}${workdir}/src/github.com/mongodb/atlas-cli-plugin-kubernetes/bin"
  - &go_options
    add_to_path:
      - ${go_bin}
      - ${go_base_path}${workdir}/bin
      - ${go_base_path}${workdir}/src/github.com/mongodb/atlas-cli-plugin-kubernetes/bin
    include_expansions_in_env:
      - go_base_path
      - workdir
    working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes
    env:
      <<: *go_env
  - &silkbomb_container_config
      SILKBOMB_REPO: "release-infrastructure/silkbomb"
      SILKBOMB_TAG: "2.0"
      SILKBOMB_REGISTRY: "901841024863.dkr.ecr.us-east-1.amazonaws.com"
      SILKBOMB_IMAGE: "901841024863.dkr.ecr.us-east-1.amazonaws.com/release-infrastructure/silkbomb:2.0"
      SILKBOMB_PURLS_FILE: "/pwd/purls.txt"
      SILKBOMB_SBOM_FILE: "/pwd/sbom.json"
  - &kondukto_config
      AUGMENTED_SILKBOMB_SBOM_FILE: "/pwd/augmented-sbom.json"
      KONDUKTO_CREDENTIALS_FILE: kondukto_credentials.env
      KONDUKTO_REPO: mongodb_atlas-cli-plugin-kubernetes
      KONDUKTO_BRANCH: test
  - &silkbomb_options
    working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes/build/package
    include_expansions_in_env: [AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN]
functions:
  "install gh-token":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes/bin
        script: |
          set -Eeou pipefail
          curl --output gh-token -sfL https://github.com/Link-/gh-token/releases/download/v2.0.1/linux-amd64
          chmod 755 ./gh-token
  "install goreleaser":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes/bin
        script: |
          set -Eeou pipefail

          curl -sfL ${goreleaser_pro_tar_gz} | tar zx
  "install macos notarization service":
    - command: shell.exec
      type: setup
      params:
        working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes
        include_expansions_in_env:
          - notary_service_url
        script: |
          set -Eeou pipefail
          curl "${notary_service_url}" --output macos-notary.zip
          unzip -u macos-notary.zip
          chmod 755 ./linux_amd64/macnotary
  "generate notices":
    - command: subprocess.exec
      type: test
      params:
        <<: *go_options
        binary: build/package/generate-notices.sh
  "generate sbom":
    - command: ec2.assume_role
      params:
        role_arn: ${ecr_role_arn}
    - command: shell.exec
      params:
        <<: *silkbomb_options
        env:
          <<: *silkbomb_container_config
        shell: bash
        script: |
          ./generate-sbom.sh
  "upload sbom":
    - command: ec2.assume_role
      params:
        role_arn: ${kondukto_role_arn}
    - command: shell.exec
      params:
        <<: *silkbomb_options
        silent: true
        shell: bash
        script: |
          set -e
          kondukto_token=$(
            aws secretsmanager get-secret-value \
              --secret-id "kondukto-token" \
              --region "us-east-1" \
              --query 'SecretString' \
              --output text
          )
          echo "KONDUKTO_TOKEN=$kondukto_token" > kondukto_credentials.env
    - command: shell.exec
      params:
        <<: *silkbomb_options
        env:
          <<: [*silkbomb_container_config, *kondukto_config]
        shell: bash
        script: |
          ./upload-sbom.sh
  "package":
    - command: github.generate_token
      params:
        expansion_name: github_token
    - command: subprocess.exec
      type: test
      params:
        <<: *go_options
        env:
          <<: *go_env
          ARTIFACTORY_USERNAME: ${artifactory_username}
          ARTIFACTORY_PASSWORD: ${artifactory_password}
          GRS_USERNAME: ${garasign_username}
          GRS_PASSWORD: ${garasign_password}
          AUTHENTICODE_KEY_NAME: ${authenticode_key_name}
          GITHUB_TOKEN: ${github_token}
        include_expansions_in_env:
          - go_base_path
          - workdir
          - notary_service_key_id
          - notary_service_secret
          - notary_service_url
          - goreleaser_key
          - version
          - test_mode
        binary: build/package/package.sh
  "trace artifacts":
     - command: shell.exec
       params:
         include_expansions_in_env:
           - test_mode
         script: |
           if [ "$test_mode" = "true" ]; then
             product="atlas-cli-plugin-kubernetes-test"
           else
             product="atlas-cli-plugin-kubernetes"
           fi
           cat <<EOT > src/github.com/mongodb/atlas-cli-plugin-kubernetes/expansions.yaml
           product: "$product"
           EOT
     - command: expansions.update
       params:
         ignore_missing_file: true
         file: src/github.com/mongodb/atlas-cli-plugin-kubernetes/expansions.yaml
     - command: papertrail.trace
       params:
         key_id: ${papertrail_key_id}
         secret_key: ${papertrail_secret_key}
         product: ${product}
         version: ${version}
         filenames:
           - "src/github.com/mongodb/atlas-cli-plugin-kubernetes/dist/*.tar.gz"
           - "src/github.com/mongodb/atlas-cli-plugin-kubernetes/dist/*.zip"
           - "src/github.com/mongodb/atlas-cli-plugin-kubernetes/dist/*.deb"
           - "src/github.com/mongodb/atlas-cli-plugin-kubernetes/dist/*.rpm"
           - "src/github.com/mongodb/atlas-cli-plugin-kubernetes/dist/*.msi"
  "build-copybara":
    - command: subprocess.exec
      params:
        <<: *go_options
        binary: git
        args:
          - clone
          - --depth=1
          - https://github.com/google/copybara
          - ${workdir}/copybara
    - command: subprocess.exec
      params:
        <<: *go_options
        binary: docker
        args:
          - build
          - -t
          - google/copybara
          - ${workdir}/copybara
  "run-copybara":
    - command: shell.exec
      params:
        <<: *go_options
        env:
          <<: *go_env
          TAG: ${tag}
          GH_TOKEN: ${gh_token}
          WORKFLOW: ${workflow}
          EVERGREEN_USER: ${evergreen_user}
          EVERGREEN_API_KEY: ${evergreen_api_key}
          DOCS_SLACK_CHANNEL: ${docs_slack_channel}
        working_dir: src/github.com/mongodb/atlas-cli-plugin-kubernetes/build/ci
        shell: bash
        script: |
          ./run-copybara.sh
tasks:
  - name: test-sbom
    tags: ["code_health"]
    allowed_requesters: ["patch"]
    depends_on:
    - name: check_purls
      status: "success"
    commands:
      - func: "generate sbom"
      - func: "upload sbom"
  - name: test-trace
    tags: ["code_health"]
    allowed_requesters: ["patch"]
    depends_on:
    - name: check_purls
      status: "success"
    commands:
      - func: "generate sbom"
      - func: "generate notices"
      - func: "install goreleaser"
      - func: "install macos notarization service"
      - func: "install gh-token"
      - func: "package"
        vars:
          test_mode: "true"
      - func: "trace artifacts"
  - name: package_goreleaser
    tags: ["packaging"]
    depends_on:
      - name: check_purls
        status: "success"
      - name: compile
        variant: "code_health"
    commands:
      - func: "generate sbom"
      - func: "upload sbom"
      - func: "generate notices"
      - func: "install goreleaser"
      - func: "install macos notarization service"
      - func: "install gh-token"
      - func: "package"
      - func: "trace artifacts"
  - name: copybara
    depends_on:
      - name: package_goreleaser
        variant: release
    commands:
      - func: "build-copybara"
      - command: github.generate_token
        params:
          expansion_name: docs_atlas_cli_token
          owner: 10gen
          repo: docs-mongodb-internal
      - func: "run-copybara"
        vars:
          gh_token: ${docs_atlas_cli_token}
          workflow: docs-mongodb-internal
      - command: github.generate_token
        params:
          expansion_name: cloud_docs_token
          owner: 10gen
          repo: cloud-docs
      - func: "run-copybara"
        vars:
          gh_token: ${cloud_docs_token}
          workflow: cloud-docs
buildvariants:
  - name: release
    display_name: "Release AtlasCLI Plugin Kubernetes (goreleaser)"
    git_tag_only: true
    run_on:
      - rhel90-small
    expansions:
      <<: *go_linux_version
      server_version: "4.4.0-rc3"
      package_name: "atlas-cli-plugin-kubernetes"
    tasks:
      - name: package_goreleaser
  - name: copybara
    display_name: "Copybara"
    git_tag_only: true
    run_on:
      - ubuntu2404-small
    expansions:
      <<: *go_linux_version
    tasks:
      - name: copybara
