// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: ProjectAPIKeyCreator,OrganizationAPIKeyCreator,ProjectAPIKeyAssigner)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
)

// MockProjectAPIKeyCreator is a mock of ProjectAPIKeyCreator interface.
type MockProjectAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockProjectAPIKeyCreatorMockRecorder
}

// MockProjectAPIKeyCreatorMockRecorder is the mock recorder for MockProjectAPIKeyCreator.
type MockProjectAPIKeyCreatorMockRecorder struct {
	mock *MockProjectAPIKeyCreator
}

// NewMockProjectAPIKeyCreator creates a new mock instance.
func NewMockProjectAPIKeyCreator(ctrl *gomock.Controller) *MockProjectAPIKeyCreator {
	mock := &MockProjectAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockProjectAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectAPIKeyCreator) EXPECT() *MockProjectAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateProjectAPIKey mocks base method.
func (m *MockProjectAPIKeyCreator) CreateProjectAPIKey(arg0 string, arg1 *admin.CreateAtlasProjectApiKey) (*admin.ApiKeyUserDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateProjectAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiKeyUserDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateProjectAPIKey indicates an expected call of CreateProjectAPIKey.
func (mr *MockProjectAPIKeyCreatorMockRecorder) CreateProjectAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateProjectAPIKey", reflect.TypeOf((*MockProjectAPIKeyCreator)(nil).CreateProjectAPIKey), arg0, arg1)
}

// MockOrganizationAPIKeyCreator is a mock of OrganizationAPIKeyCreator interface.
type MockOrganizationAPIKeyCreator struct {
	ctrl     *gomock.Controller
	recorder *MockOrganizationAPIKeyCreatorMockRecorder
}

// MockOrganizationAPIKeyCreatorMockRecorder is the mock recorder for MockOrganizationAPIKeyCreator.
type MockOrganizationAPIKeyCreatorMockRecorder struct {
	mock *MockOrganizationAPIKeyCreator
}

// NewMockOrganizationAPIKeyCreator creates a new mock instance.
func NewMockOrganizationAPIKeyCreator(ctrl *gomock.Controller) *MockOrganizationAPIKeyCreator {
	mock := &MockOrganizationAPIKeyCreator{ctrl: ctrl}
	mock.recorder = &MockOrganizationAPIKeyCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrganizationAPIKeyCreator) EXPECT() *MockOrganizationAPIKeyCreatorMockRecorder {
	return m.recorder
}

// CreateOrganizationAPIKey mocks base method.
func (m *MockOrganizationAPIKeyCreator) CreateOrganizationAPIKey(arg0 string, arg1 *admin.CreateAtlasOrganizationApiKey) (*admin.ApiKeyUserDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*admin.ApiKeyUserDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationAPIKey indicates an expected call of CreateOrganizationAPIKey.
func (mr *MockOrganizationAPIKeyCreatorMockRecorder) CreateOrganizationAPIKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationAPIKey", reflect.TypeOf((*MockOrganizationAPIKeyCreator)(nil).CreateOrganizationAPIKey), arg0, arg1)
}

// MockProjectAPIKeyAssigner is a mock of ProjectAPIKeyAssigner interface.
type MockProjectAPIKeyAssigner struct {
	ctrl     *gomock.Controller
	recorder *MockProjectAPIKeyAssignerMockRecorder
}

// MockProjectAPIKeyAssignerMockRecorder is the mock recorder for MockProjectAPIKeyAssigner.
type MockProjectAPIKeyAssignerMockRecorder struct {
	mock *MockProjectAPIKeyAssigner
}

// NewMockProjectAPIKeyAssigner creates a new mock instance.
func NewMockProjectAPIKeyAssigner(ctrl *gomock.Controller) *MockProjectAPIKeyAssigner {
	mock := &MockProjectAPIKeyAssigner{ctrl: ctrl}
	mock.recorder = &MockProjectAPIKeyAssignerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProjectAPIKeyAssigner) EXPECT() *MockProjectAPIKeyAssignerMockRecorder {
	return m.recorder
}

// AssignProjectAPIKey mocks base method.
func (m *MockProjectAPIKeyAssigner) AssignProjectAPIKey(arg0, arg1 string, arg2 *admin.UpdateAtlasProjectApiKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssignProjectAPIKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AssignProjectAPIKey indicates an expected call of AssignProjectAPIKey.
func (mr *MockProjectAPIKeyAssignerMockRecorder) AssignProjectAPIKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignProjectAPIKey", reflect.TypeOf((*MockProjectAPIKeyAssigner)(nil).AssignProjectAPIKey), arg0, arg1, arg2)
}
