// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: IdentityProviderLister,IdentityProviderDescriber)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20241113004/admin"
)

// MockIdentityProviderLister is a mock of IdentityProviderLister interface.
type MockIdentityProviderLister struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityProviderListerMockRecorder
}

// MockIdentityProviderListerMockRecorder is the mock recorder for MockIdentityProviderLister.
type MockIdentityProviderListerMockRecorder struct {
	mock *MockIdentityProviderLister
}

// NewMockIdentityProviderLister creates a new mock instance.
func NewMockIdentityProviderLister(ctrl *gomock.Controller) *MockIdentityProviderLister {
	mock := &MockIdentityProviderLister{ctrl: ctrl}
	mock.recorder = &MockIdentityProviderListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityProviderLister) EXPECT() *MockIdentityProviderListerMockRecorder {
	return m.recorder
}

// IdentityProviders mocks base method.
func (m *MockIdentityProviderLister) IdentityProviders(arg0 *admin.ListIdentityProvidersApiParams) ([]admin.FederationIdentityProvider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IdentityProviders", arg0)
	ret0, _ := ret[0].([]admin.FederationIdentityProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IdentityProviders indicates an expected call of IdentityProviders.
func (mr *MockIdentityProviderListerMockRecorder) IdentityProviders(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IdentityProviders", reflect.TypeOf((*MockIdentityProviderLister)(nil).IdentityProviders), arg0)
}

// MockIdentityProviderDescriber is a mock of IdentityProviderDescriber interface.
type MockIdentityProviderDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityProviderDescriberMockRecorder
}

// MockIdentityProviderDescriberMockRecorder is the mock recorder for MockIdentityProviderDescriber.
type MockIdentityProviderDescriberMockRecorder struct {
	mock *MockIdentityProviderDescriber
}

// NewMockIdentityProviderDescriber creates a new mock instance.
func NewMockIdentityProviderDescriber(ctrl *gomock.Controller) *MockIdentityProviderDescriber {
	mock := &MockIdentityProviderDescriber{ctrl: ctrl}
	mock.recorder = &MockIdentityProviderDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityProviderDescriber) EXPECT() *MockIdentityProviderDescriberMockRecorder {
	return m.recorder
}

// IdentityProvider mocks base method.
func (m *MockIdentityProviderDescriber) IdentityProvider(arg0 *admin.GetIdentityProviderApiParams) (*admin.FederationIdentityProvider, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IdentityProvider", arg0)
	ret0, _ := ret[0].(*admin.FederationIdentityProvider)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IdentityProvider indicates an expected call of IdentityProvider.
func (mr *MockIdentityProviderDescriberMockRecorder) IdentityProvider(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IdentityProvider", reflect.TypeOf((*MockIdentityProviderDescriber)(nil).IdentityProvider), arg0)
}
