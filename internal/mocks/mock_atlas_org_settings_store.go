// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: OrgSettingsStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
)

// MockOrgSettingsStore is a mock of OrgSettingsStore interface.
type MockOrgSettingsStore struct {
	ctrl     *gomock.Controller
	recorder *MockOrgSettingsStoreMockRecorder
}

// MockOrgSettingsStoreMockRecorder is the mock recorder for MockOrgSettingsStore.
type MockOrgSettingsStoreMockRecorder struct {
	mock *MockOrgSettingsStore
}

// NewMockOrgSettingsStore creates a new mock instance.
func NewMockOrgSettingsStore(ctrl *gomock.Controller) *MockOrgSettingsStore {
	mock := &MockOrgSettingsStore{ctrl: ctrl}
	mock.recorder = &MockOrgSettingsStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrgSettingsStore) EXPECT() *MockOrgSettingsStoreMockRecorder {
	return m.recorder
}

// GetOrgSettings mocks base method.
func (m *MockOrgSettingsStore) GetOrgSettings(arg0 string) (*admin.OrganizationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgSettings", arg0)
	ret0, _ := ret[0].(*admin.OrganizationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgSettings indicates an expected call of GetOrgSettings.
func (mr *MockOrgSettingsStoreMockRecorder) GetOrgSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgSettings", reflect.TypeOf((*MockOrgSettingsStore)(nil).GetOrgSettings), arg0)
}

// UpdateOrgSettings mocks base method.
func (m *MockOrgSettingsStore) UpdateOrgSettings(arg0 string, arg1 *admin.OrganizationSettings) (*admin.OrganizationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrgSettings", arg0, arg1)
	ret0, _ := ret[0].(*admin.OrganizationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrgSettings indicates an expected call of UpdateOrgSettings.
func (mr *MockOrgSettingsStoreMockRecorder) UpdateOrgSettings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrgSettings", reflect.TypeOf((*MockOrgSettingsStore)(nil).UpdateOrgSettings), arg0, arg1)
}
