// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: AlertConfigurationLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20241113004/admin"
)

// MockAlertConfigurationLister is a mock of AlertConfigurationLister interface.
type MockAlertConfigurationLister struct {
	ctrl     *gomock.Controller
	recorder *MockAlertConfigurationListerMockRecorder
}

// MockAlertConfigurationListerMockRecorder is the mock recorder for MockAlertConfigurationLister.
type MockAlertConfigurationListerMockRecorder struct {
	mock *MockAlertConfigurationLister
}

// NewMockAlertConfigurationLister creates a new mock instance.
func NewMockAlertConfigurationLister(ctrl *gomock.Controller) *MockAlertConfigurationLister {
	mock := &MockAlertConfigurationLister{ctrl: ctrl}
	mock.recorder = &MockAlertConfigurationListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertConfigurationLister) EXPECT() *MockAlertConfigurationListerMockRecorder {
	return m.recorder
}

// AlertConfigurations mocks base method.
func (m *MockAlertConfigurationLister) AlertConfigurations(arg0 string) ([]admin.GroupAlertsConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AlertConfigurations", arg0)
	ret0, _ := ret[0].([]admin.GroupAlertsConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AlertConfigurations indicates an expected call of AlertConfigurations.
func (mr *MockAlertConfigurationListerMockRecorder) AlertConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AlertConfigurations", reflect.TypeOf((*MockAlertConfigurationLister)(nil).AlertConfigurations), arg0)
}
