// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: OrgSettingsDescriber,OrgSettingsUpdater)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
)

// MockOrgSettingsDescriber is a mock of OrgSettingsDescriber interface.
type MockOrgSettingsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockOrgSettingsDescriberMockRecorder
}

// MockOrgSettingsDescriberMockRecorder is the mock recorder for MockOrgSettingsDescriber.
type MockOrgSettingsDescriberMockRecorder struct {
	mock *MockOrgSettingsDescriber
}

// NewMockOrgSettingsDescriber creates a new mock instance.
func NewMockOrgSettingsDescriber(ctrl *gomock.Controller) *MockOrgSettingsDescriber {
	mock := &MockOrgSettingsDescriber{ctrl: ctrl}
	mock.recorder = &MockOrgSettingsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrgSettingsDescriber) EXPECT() *MockOrgSettingsDescriberMockRecorder {
	return m.recorder
}

// GetOrgSettings mocks base method.
func (m *MockOrgSettingsDescriber) GetOrgSettings(arg0 string) (*admin.OrganizationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgSettings", arg0)
	ret0, _ := ret[0].(*admin.OrganizationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgSettings indicates an expected call of GetOrgSettings.
func (mr *MockOrgSettingsDescriberMockRecorder) GetOrgSettings(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgSettings", reflect.TypeOf((*MockOrgSettingsDescriber)(nil).GetOrgSettings), arg0)
}

// MockOrgSettingsUpdater is a mock of OrgSettingsUpdater interface.
type MockOrgSettingsUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockOrgSettingsUpdaterMockRecorder
}

// MockOrgSettingsUpdaterMockRecorder is the mock recorder for MockOrgSettingsUpdater.
type MockOrgSettingsUpdaterMockRecorder struct {
	mock *MockOrgSettingsUpdater
}

// NewMockOrgSettingsUpdater creates a new mock instance.
func NewMockOrgSettingsUpdater(ctrl *gomock.Controller) *MockOrgSettingsUpdater {
	mock := &MockOrgSettingsUpdater{ctrl: ctrl}
	mock.recorder = &MockOrgSettingsUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrgSettingsUpdater) EXPECT() *MockOrgSettingsUpdaterMockRecorder {
	return m.recorder
}

// UpdateOrgSettings mocks base method.
func (m *MockOrgSettingsUpdater) UpdateOrgSettings(arg0 string, arg1 *admin.OrganizationSettings) (*admin.OrganizationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrgSettings", arg0, arg1)
	ret0, _ := ret[0].(*admin.OrganizationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrgSettings indicates an expected call of UpdateOrgSettings.
func (mr *MockOrgSettingsUpdaterMockRecorder) UpdateOrgSettings(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrgSettings", reflect.TypeOf((*MockOrgSettingsUpdater)(nil).UpdateOrgSettings), arg0, arg1)
}
