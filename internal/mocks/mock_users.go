// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: TeamUserLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20250312006/admin"
)

// MockTeamUserLister is a mock of TeamUserLister interface.
type MockTeamUserLister struct {
	ctrl     *gomock.Controller
	recorder *MockTeamUserListerMockRecorder
}

// MockTeamUserListerMockRecorder is the mock recorder for MockTeamUserLister.
type MockTeamUserListerMockRecorder struct {
	mock *MockTeamUserLister
}

// NewMockTeamUserLister creates a new mock instance.
func NewMockTeamUserLister(ctrl *gomock.Controller) *MockTeamUserLister {
	mock := &MockTeamUserLister{ctrl: ctrl}
	mock.recorder = &MockTeamUserListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeamUserLister) EXPECT() *MockTeamUserListerMockRecorder {
	return m.recorder
}

// TeamUsers mocks base method.
func (m *MockTeamUserLister) TeamUsers(arg0, arg1 string) (*admin.PaginatedOrgUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TeamUsers", arg0, arg1)
	ret0, _ := ret[0].(*admin.PaginatedOrgUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TeamUsers indicates an expected call of TeamUsers.
func (mr *MockTeamUserListerMockRecorder) TeamUsers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TeamUsers", reflect.TypeOf((*MockTeamUserLister)(nil).TeamUsers), arg0, arg1)
}
