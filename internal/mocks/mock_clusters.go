// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: ClusterLister,ClusterDescriber,AtlasClusterConfigurationOptionsDescriber)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20240530005/admin"
	admin0 "go.mongodb.org/atlas-sdk/v20241113004/admin"
)

// MockClusterLister is a mock of ClusterLister interface.
type MockClusterLister struct {
	ctrl     *gomock.Controller
	recorder *MockClusterListerMockRecorder
}

// MockClusterListerMockRecorder is the mock recorder for MockClusterLister.
type MockClusterListerMockRecorder struct {
	mock *MockClusterLister
}

// NewMockClusterLister creates a new mock instance.
func NewMockClusterLister(ctrl *gomock.Controller) *MockClusterLister {
	mock := &MockClusterLister{ctrl: ctrl}
	mock.recorder = &MockClusterListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterLister) EXPECT() *MockClusterListerMockRecorder {
	return m.recorder
}

// ListAtlasClusters mocks base method.
func (m *MockClusterLister) ListAtlasClusters(arg0 string) ([]admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAtlasClusters", arg0)
	ret0, _ := ret[0].([]admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAtlasClusters indicates an expected call of ListAtlasClusters.
func (mr *MockClusterListerMockRecorder) ListAtlasClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAtlasClusters", reflect.TypeOf((*MockClusterLister)(nil).ListAtlasClusters), arg0)
}

// ListFlexClusters mocks base method.
func (m *MockClusterLister) ListFlexClusters(arg0 string) ([]admin0.FlexClusterDescription20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListFlexClusters", arg0)
	ret0, _ := ret[0].([]admin0.FlexClusterDescription20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFlexClusters indicates an expected call of ListFlexClusters.
func (mr *MockClusterListerMockRecorder) ListFlexClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFlexClusters", reflect.TypeOf((*MockClusterLister)(nil).ListFlexClusters), arg0)
}

// MockClusterDescriber is a mock of ClusterDescriber interface.
type MockClusterDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockClusterDescriberMockRecorder
}

// MockClusterDescriberMockRecorder is the mock recorder for MockClusterDescriber.
type MockClusterDescriberMockRecorder struct {
	mock *MockClusterDescriber
}

// NewMockClusterDescriber creates a new mock instance.
func NewMockClusterDescriber(ctrl *gomock.Controller) *MockClusterDescriber {
	mock := &MockClusterDescriber{ctrl: ctrl}
	mock.recorder = &MockClusterDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterDescriber) EXPECT() *MockClusterDescriberMockRecorder {
	return m.recorder
}

// AtlasCluster mocks base method.
func (m *MockClusterDescriber) AtlasCluster(arg0, arg1 string) (*admin.AdvancedClusterDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin.AdvancedClusterDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasCluster indicates an expected call of AtlasCluster.
func (mr *MockClusterDescriberMockRecorder) AtlasCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasCluster", reflect.TypeOf((*MockClusterDescriber)(nil).AtlasCluster), arg0, arg1)
}

// FlexCluster mocks base method.
func (m *MockClusterDescriber) FlexCluster(arg0, arg1 string) (*admin0.FlexClusterDescription20241113, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FlexCluster", arg0, arg1)
	ret0, _ := ret[0].(*admin0.FlexClusterDescription20241113)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FlexCluster indicates an expected call of FlexCluster.
func (mr *MockClusterDescriberMockRecorder) FlexCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FlexCluster", reflect.TypeOf((*MockClusterDescriber)(nil).FlexCluster), arg0, arg1)
}

// MockAtlasClusterConfigurationOptionsDescriber is a mock of AtlasClusterConfigurationOptionsDescriber interface.
type MockAtlasClusterConfigurationOptionsDescriber struct {
	ctrl     *gomock.Controller
	recorder *MockAtlasClusterConfigurationOptionsDescriberMockRecorder
}

// MockAtlasClusterConfigurationOptionsDescriberMockRecorder is the mock recorder for MockAtlasClusterConfigurationOptionsDescriber.
type MockAtlasClusterConfigurationOptionsDescriberMockRecorder struct {
	mock *MockAtlasClusterConfigurationOptionsDescriber
}

// NewMockAtlasClusterConfigurationOptionsDescriber creates a new mock instance.
func NewMockAtlasClusterConfigurationOptionsDescriber(ctrl *gomock.Controller) *MockAtlasClusterConfigurationOptionsDescriber {
	mock := &MockAtlasClusterConfigurationOptionsDescriber{ctrl: ctrl}
	mock.recorder = &MockAtlasClusterConfigurationOptionsDescriberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAtlasClusterConfigurationOptionsDescriber) EXPECT() *MockAtlasClusterConfigurationOptionsDescriberMockRecorder {
	return m.recorder
}

// AtlasClusterConfigurationOptions mocks base method.
func (m *MockAtlasClusterConfigurationOptionsDescriber) AtlasClusterConfigurationOptions(arg0, arg1 string) (*admin.ClusterDescriptionProcessArgs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AtlasClusterConfigurationOptions", arg0, arg1)
	ret0, _ := ret[0].(*admin.ClusterDescriptionProcessArgs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AtlasClusterConfigurationOptions indicates an expected call of AtlasClusterConfigurationOptions.
func (mr *MockAtlasClusterConfigurationOptionsDescriberMockRecorder) AtlasClusterConfigurationOptions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AtlasClusterConfigurationOptions", reflect.TypeOf((*MockAtlasClusterConfigurationOptionsDescriber)(nil).AtlasClusterConfigurationOptions), arg0, arg1)
}
