// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mongodb/atlas-cli-plugin-kubernetes/internal/store (interfaces: NetworkContainerLister)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "go.mongodb.org/atlas-sdk/v20241113004/admin"
)

// MockNetworkContainerLister is a mock of NetworkContainerLister interface.
type MockNetworkContainerLister struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkContainerListerMockRecorder
}

// MockNetworkContainerListerMockRecorder is the mock recorder for MockNetworkContainerLister.
type MockNetworkContainerListerMockRecorder struct {
	mock *MockNetworkContainerLister
}

// NewMockNetworkContainerLister creates a new mock instance.
func NewMockNetworkContainerLister(ctrl *gomock.Controller) *MockNetworkContainerLister {
	mock := &MockNetworkContainerLister{ctrl: ctrl}
	mock.recorder = &MockNetworkContainerListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetworkContainerLister) EXPECT() *MockNetworkContainerListerMockRecorder {
	return m.recorder
}

// NetworkContainers mocks base method.
func (m *MockNetworkContainerLister) NetworkContainers(arg0 string) ([]admin.CloudProviderContainer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkContainers", arg0)
	ret0, _ := ret[0].([]admin.CloudProviderContainer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NetworkContainers indicates an expected call of NetworkContainers.
func (mr *MockNetworkContainerListerMockRecorder) NetworkContainers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkContainers", reflect.TypeOf((*MockNetworkContainerLister)(nil).NetworkContainers), arg0)
}
